// Code generated by MockGen. DO NOT EDIT.
// Source: texture.go

// Package pbrt is a generated GoMock package.
package pbrt

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSpectrumTexture is a mock of SpectrumTexture interface
type MockSpectrumTexture struct {
	ctrl     *gomock.Controller
	recorder *MockSpectrumTextureMockRecorder
}

// MockSpectrumTextureMockRecorder is the mock recorder for MockSpectrumTexture
type MockSpectrumTextureMockRecorder struct {
	mock *MockSpectrumTexture
}

// NewMockSpectrumTexture creates a new mock instance
func NewMockSpectrumTexture(ctrl *gomock.Controller) *MockSpectrumTexture {
	mock := &MockSpectrumTexture{ctrl: ctrl}
	mock.recorder = &MockSpectrumTextureMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSpectrumTexture) EXPECT() *MockSpectrumTextureMockRecorder {
	return m.recorder
}

// Evaluate mocks base method
func (m *MockSpectrumTexture) Evaluate(si *SurfaceInteraction) Spectrum {
	ret := m.ctrl.Call(m, "Evaluate", si)
	ret0, _ := ret[0].(Spectrum)
	return ret0
}

// Evaluate indicates an expected call of Evaluate
func (mr *MockSpectrumTextureMockRecorder) Evaluate(si interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Evaluate", reflect.TypeOf((*MockSpectrumTexture)(nil).Evaluate), si)
}

// MockFloatTexture is a mock of FloatTexture interface
type MockFloatTexture struct {
	ctrl     *gomock.Controller
	recorder *MockFloatTextureMockRecorder
}

// MockFloatTextureMockRecorder is the mock recorder for MockFloatTexture
type MockFloatTextureMockRecorder struct {
	mock *MockFloatTexture
}

// NewMockFloatTexture creates a new mock instance
func NewMockFloatTexture(ctrl *gomock.Controller) *MockFloatTexture {
	mock := &MockFloatTexture{ctrl: ctrl}
	mock.recorder = &MockFloatTextureMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFloatTexture) EXPECT() *MockFloatTextureMockRecorder {
	return m.recorder
}

// Evaluate mocks base method
func (m *MockFloatTexture) Evaluate(si *SurfaceInteraction) float64 {
	ret := m.ctrl.Call(m, "Evaluate", si)
	ret0, _ := ret[0].(float64)
	return ret0
}

// Evaluate indicates an expected call of Evaluate
func (mr *MockFloatTextureMockRecorder) Evaluate(si interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Evaluate", reflect.TypeOf((*MockFloatTexture)(nil).Evaluate), si)
}
