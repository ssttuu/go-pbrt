// Code generated by protoc-gen-go. DO NOT EDIT.
// source: render/service.proto

package render

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RenderRequest struct {
	SceneId              string   `protobuf:"bytes,1,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	Time                 float64  `protobuf:"fixed64,2,opt,name=time,proto3" json:"time,omitempty"`
	Width                int32    `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32    `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenderRequest) Reset()         { *m = RenderRequest{} }
func (m *RenderRequest) String() string { return proto.CompactTextString(m) }
func (*RenderRequest) ProtoMessage()    {}
func (*RenderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_8edfcd37a5f15f09, []int{0}
}
func (m *RenderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenderRequest.Unmarshal(m, b)
}
func (m *RenderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenderRequest.Marshal(b, m, deterministic)
}
func (dst *RenderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenderRequest.Merge(dst, src)
}
func (m *RenderRequest) XXX_Size() int {
	return xxx_messageInfo_RenderRequest.Size(m)
}
func (m *RenderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RenderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RenderRequest proto.InternalMessageInfo

func (m *RenderRequest) GetSceneId() string {
	if m != nil {
		return m.SceneId
	}
	return ""
}

func (m *RenderRequest) GetTime() float64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *RenderRequest) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *RenderRequest) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

type RenderResponse struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenderResponse) Reset()         { *m = RenderResponse{} }
func (m *RenderResponse) String() string { return proto.CompactTextString(m) }
func (*RenderResponse) ProtoMessage()    {}
func (*RenderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_8edfcd37a5f15f09, []int{1}
}
func (m *RenderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenderResponse.Unmarshal(m, b)
}
func (m *RenderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenderResponse.Marshal(b, m, deterministic)
}
func (dst *RenderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenderResponse.Merge(dst, src)
}
func (m *RenderResponse) XXX_Size() int {
	return xxx_messageInfo_RenderResponse.Size(m)
}
func (m *RenderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RenderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RenderResponse proto.InternalMessageInfo

func (m *RenderResponse) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func init() {
	proto.RegisterType((*RenderRequest)(nil), "render.RenderRequest")
	proto.RegisterType((*RenderResponse)(nil), "render.RenderResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RenderClient is the client API for Render service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RenderClient interface {
	Render(ctx context.Context, in *RenderRequest, opts ...grpc.CallOption) (*RenderResponse, error)
}

type renderClient struct {
	cc *grpc.ClientConn
}

func NewRenderClient(cc *grpc.ClientConn) RenderClient {
	return &renderClient{cc}
}

func (c *renderClient) Render(ctx context.Context, in *RenderRequest, opts ...grpc.CallOption) (*RenderResponse, error) {
	out := new(RenderResponse)
	err := c.cc.Invoke(ctx, "/render.Render/Render", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RenderServer is the server API for Render service.
type RenderServer interface {
	Render(context.Context, *RenderRequest) (*RenderResponse, error)
}

func RegisterRenderServer(s *grpc.Server, srv RenderServer) {
	s.RegisterService(&_Render_serviceDesc, srv)
}

func _Render_Render_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RenderServer).Render(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/render.Render/Render",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RenderServer).Render(ctx, req.(*RenderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Render_serviceDesc = grpc.ServiceDesc{
	ServiceName: "render.Render",
	HandlerType: (*RenderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Render",
			Handler:    _Render_Render_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "render/service.proto",
}

func init() { proto.RegisterFile("render/service.proto", fileDescriptor_service_8edfcd37a5f15f09) }

var fileDescriptor_service_8edfcd37a5f15f09 = []byte{
	// 188 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8f, 0x31, 0x0b, 0xc2, 0x30,
	0x14, 0x84, 0x8d, 0xb6, 0x51, 0x1f, 0xe8, 0x10, 0x6a, 0x89, 0x4e, 0xa5, 0x38, 0x74, 0xaa, 0xa0,
	0x93, 0xb3, 0x93, 0x6b, 0xfe, 0x80, 0x68, 0xf3, 0x30, 0x01, 0x6d, 0x6b, 0x12, 0xf5, 0xef, 0x8b,
	0x49, 0x15, 0x74, 0xfb, 0xee, 0x78, 0xdc, 0xdd, 0x83, 0xc4, 0x60, 0x2d, 0xd1, 0xac, 0x2c, 0x9a,
	0x87, 0xae, 0xb0, 0x6c, 0x4d, 0xe3, 0x1a, 0x46, 0x83, 0x9b, 0x5f, 0x60, 0x22, 0x3c, 0x09, 0xbc,
	0xdd, 0xd1, 0x3a, 0x36, 0x87, 0x91, 0xad, 0xb0, 0xc6, 0x83, 0x96, 0x9c, 0x64, 0xa4, 0x18, 0x8b,
	0xa1, 0xd7, 0x7b, 0xc9, 0x18, 0x44, 0x4e, 0x5f, 0x91, 0xf7, 0x33, 0x52, 0x10, 0xe1, 0x99, 0x25,
	0x10, 0x3f, 0xb5, 0x74, 0x8a, 0x0f, 0x32, 0x52, 0xc4, 0x22, 0x08, 0x96, 0x02, 0x55, 0xa8, 0xcf,
	0xca, 0xf1, 0xc8, 0xdb, 0x9d, 0xca, 0x97, 0x30, 0xfd, 0xb4, 0xd9, 0xb6, 0xa9, 0x2d, 0xbe, 0x33,
	0xdb, 0xa3, 0x53, 0x5d, 0x95, 0xe7, 0xf5, 0x0e, 0x68, 0xb8, 0x62, 0xdb, 0x2f, 0xcd, 0xca, 0x30,
	0xb8, 0xfc, 0x59, 0xbb, 0x48, 0xff, 0xed, 0x10, 0x9b, 0xf7, 0x4e, 0xd4, 0xff, 0xb9, 0x79, 0x05,
	0x00, 0x00, 0xff, 0xff, 0xdc, 0x9c, 0x6b, 0x7e, 0xff, 0x00, 0x00, 0x00,
}
