// Code generated by MockGen. DO NOT EDIT.
// Source: material.go

// Package pbrt is a generated GoMock package.
package pbrt

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMaterial is a mock of Material interface
type MockMaterial struct {
	ctrl     *gomock.Controller
	recorder *MockMaterialMockRecorder
}

// MockMaterialMockRecorder is the mock recorder for MockMaterial
type MockMaterialMockRecorder struct {
	mock *MockMaterial
}

// NewMockMaterial creates a new mock instance
func NewMockMaterial(ctrl *gomock.Controller) *MockMaterial {
	mock := &MockMaterial{ctrl: ctrl}
	mock.recorder = &MockMaterialMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMaterial) EXPECT() *MockMaterialMockRecorder {
	return m.recorder
}

// ComputeScatteringFunctions mocks base method
func (m *MockMaterial) ComputeScatteringFunctions(si *SurfaceInteraction, mode TransportMode, allowMultipleLobes bool) {
	m.ctrl.Call(m, "ComputeScatteringFunctions", si, mode, allowMultipleLobes)
}

// ComputeScatteringFunctions indicates an expected call of ComputeScatteringFunctions
func (mr *MockMaterialMockRecorder) ComputeScatteringFunctions(si, mode, allowMultipleLobes interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ComputeScatteringFunctions", reflect.TypeOf((*MockMaterial)(nil).ComputeScatteringFunctions), si, mode, allowMultipleLobes)
}
